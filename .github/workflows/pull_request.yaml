name: Pull Request Workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  pull-request-build:
    name: Node.js Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Replace this with your desired Node.js version

      - name: Install Dependencies
        run: npm install

      - name: Build
        run: npm run build  # Replace this with the appropriate build command for your Node.js application
  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build Docker Image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: . 
          push: ${{ github.event_name=='push' }}
          tags: hiteshwani29/book-frontend-svc:${{ github.sha }}
  trigger_deployment:
    needs: docker-build
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Trigger Deployment in Deployment Repository
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT }}  # Personal Access Token with repo scope
          repository: ${{ github.actor }}/bookApp-deploy  # Deployment repository
          event-type: deploy
          client-payload: '{"image": "hiteshwani29/book-frontend-svc:${{ github.sha }}","path":"deployment-yamls/frontend-deployment.yaml"}'
    